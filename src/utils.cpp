#include <rrt/utils.h>

#include <cmath>

namespace utility {

double shortestAngularDistance(const double &current_angle, const double &target_angle) {
  double diff = fmod(target_angle - current_angle + M_PI, 2 * M_PI) - M_PI;
  return diff < -M_PI ? diff + 2 * M_PI : diff;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////

double rad2deg(const double &angle) {
  return angle * 180.0 / M_PI;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////

double deg2rad(const double &angle) {
  return angle * M_PI / 180.0;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////

int sign(const double &val) {
    if (val > 0)
      return 1;
    else if (val == 0)
      return 0;
    else
      return -1;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////

double normalizeAngle(double angle) {
  while (fabs(angle) > M_PI)
    angle -= sign(angle) * 2.0 * M_PI;
  return angle;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////

bool approxEqual(const double &a, const double &b, const double &tol) {
  return fabs(a - b) < tol;
}

} // namespace utility